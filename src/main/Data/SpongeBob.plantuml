@startuml

title __SPONGEBOB's Class Diagram__\n

  class DataMappers.AccountancyMapper {
          {static} - CONN_STR : String
          {static} - PASSWORD : String
          {static} - USERNAME : String
          + changeMemberStatusToActive()
          + changeMemberStatusToInactive()
          + displayActiveMembersOverdueFromDb()
          + displayInactiveMembersOverdueFromDb()
          + subscriptionRenewal()
      }

      class DataMappers.MembershipMapper {
          {static} ~ db_id : int
          ~ members : ArrayList<Member>
          {static} - CONN_STR : String
          {static} - PASSWORD : String
          {static} - USERNAME : String
          + deleteMemberFromDb()
          + displayActiveSwimmersFromDb()
          + displayAllSwimmersFromDb()
          + displayInactiveSwimmersFromDb()
          + findMemberByBirthdateFromDb()
          + findMemberByIdFromDb()
          + findMemberByNameFromDb()
          + findMemberByPhoneFromDb()
          + getNextIdFromDb()
          + registerMemberIntoDb()
      }

      class DataMappers.StatisticsMapper {
          ~ category : String
          ~ db_id : int
          ~ discipline : String
          {static} - CONN_STR : String
          {static} - PASSWORD : String
          {static} - USERNAME : String
          + findMemberByIdFromDb()
          + getNextTrainingIdFromDb()
          + registerDailyResultsIntoDb()
          + top5ByCategoryDisciplineFromDb()
      }

      class Model.Member {
          ~ age : int
          ~ birthdate : LocalDate
          ~ birthdateStr : String
          ~ category : String
          ~ confirmation : int
          ~ dis : int
          ~ discipline : String
          ~ id : int
          ~ mod : int
          ~ modality : String
          ~ name : String
          ~ on_hold_date : LocalDate
          ~ on_hold_payment : double
          ~ overdue_by_year : int
          ~ paid_date : LocalDate
          ~ payment : double
          ~ phone : int
          ~ status : String
          ~ surname : String
          + Member()
          + Member()
          + toString()
          + userRegistryInput()
      }

      class Model.Results {
          ~ confirmation : int
          ~ date : LocalDate
          ~ dateStr : String
          ~ id : int
          ~ millisec : String
          ~ millisecond : int
          ~ qualification : int
          ~ r_id : int
          ~ tournament : String
          ~ trainer : String
          ~ type : String
          ~ validMember : boolean
          + Results()
          + Results()
          + userChampionshipTrainingInput()
          + userDailyTrainingInput()
      }

    class Sponge_Bob_Club {
        ~ sqlCheck : boolean
        + accountancySwitch()
        {static} + main()
        + mainMenuSwitch()
        + memberSearchSwitch()
        + membershipSwitch()
        + showAccountancyDisplay()
        + showMemberSearchDisplay()
        + showMembershipDisplay()
        + showMenuDisplay()
        + showStatisticsDisplay()
        + statisticsSwitch()
        - initalizeSQLDB()
    }

      class Util.DB_Connect {
          - connection : Connection
          {static} - instance : DB_Connect
          {static} + getInstance()
          - DB_Connect()
      }

      class Util.TimeCalc {
          + mil : int
          + millisecond : int
          + milliseconds : int
          + minutes : int
          + rest : String
          + restx : int
          + sec : int
          + seconds : int
          + time : String
          + millisecondCalcInteger()
          + millisecondCalcString()
      }


  DataMappers.StatisticsMapper o-- Util.TimeCalc : calc
  Model.Member o-- DataMappers.MembershipMapper : sDB
  Model.Results o-- DataMappers.MembershipMapper : mDB
  Model.Results o-- DataMappers.StatisticsMapper : sDB
  Sponge_Bob_Club o-- DataMappers.AccountancyMapper : aDB
  Sponge_Bob_Club o-- DataMappers.MembershipMapper : mDB
  Sponge_Bob_Club o-- Model.Member : member
  Sponge_Bob_Club o-- Model.Results : results
  Sponge_Bob_Club o-- DataMappers.StatisticsMapper : sDB
  DataMappers.StatisticsMapper o-- Util.DB_Connect : connect
  DataMappers.MembershipMapper o-- Util.DB_Connect : connect
  DataMappers.AccountancyMapper o-- Util.DB_Connect : connect



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
